/*
Rasmus Davidsson, Anton Solback grupp 46
*/
package Uppgift2;

public class TestaSecant {

	public static void main(String[] args){
		Function f;
		final double eps = 0.0000000001;

		// Testing x^2-0.6
		try {

			f = new Function(){ 
				public double f(double x){
					return (x*x)-0.6;
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"x*x-0.6\" \t: ±";
				}
			};
			System.out.println(f.toString() + Secant.secant(f,0.0,5.0,eps));

		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: (x*x)-0.6");
		}

		// Testing 10^-16 * x^2-10^-17
		try {

			f = new Function(){ 
				public double f(double x){
					return 1e-16 * (x*x)-1e-17;
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"1e-16 * (x*x)-1e-17\" \t: ±";
				}
			};
			System.out.println(f.toString() + Secant.secant(f, 2, 5, eps));

		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: 1e-16*(x*x)-1e-17");
		}

		//Testing x^2-2
		try{

			f = new Function(){ 
				public double f(double x){
					return (x*x)-2;
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"(x*x)-2\" \t: ±";
				}
			};
			System.out.println(f.toString() + Secant.secant(f, -4, 20, eps));

		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: (x*x)-2");
		}

		//Testing x^3-x^2+2x
		try{

			f = new Function(){ 
				public double f(double x){
					return (x*x*x)-(x*x)+(2*x);
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"(x*x*x)-(x*x)+(2*x)\" \t: ";
				}
			};
			System.out.println(f.toString() + Secant.secant(f, 0, 5, eps));

		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: (x*x*x)-(x*x)+(2*x)");

		}

		//Testing (x+10)^2-0.6
		try{

			f = new Function(){ 
				public double f(double x){
					return (x+10)*(x+10)-0.6;
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"(x+10)*(x+10)-0.6\" \t: -";
				}
			};
			System.out.println(f.toString() + Secant.secant(f, -10, -5, eps));
		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: (x+10)*(x+10)-0.6");
		}

		/* Testing ln(x).
		 * log(x) or ln(x) has an asymptote in the x-value of zero. 
		 * Meaning it will never reach 0. But will come infinitely close to 0. 
		 * Therefore the result is NaN. And it doesn't throw an exception because the answer will be infinitely bellow zero.
		 * We therefore change the testing value of the lower border to 0.25
		 */
		try{ 

			f = new Function(){ 
				public double f(double x){
					return Math.log(x);
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"log(x)\" \t: ";
				}
			};
			System.out.println(f.toString() + Secant.secant(f, 0.5, 10, eps));

		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: log(x)");
		}

		//Testing atan(x)
		try{

			f = new Function(){ 
				public double f(double x){
					return Math.atan(x);
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"atan(x)\" \t: ";
				}
			};
			System.out.println(f.toString() + Secant.secant(f, -0.5, 5, eps));
		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: atan(x)");
		}

		//Testing x-2*10^-16
		try{

			f = new Function(){
				public double f(double x){
					return x-(2*1e-16);
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"x-(2*1e-16)\" \t: ";
				}
			};
			System.out.println(f.toString() + Secant.secant(f, -1, 2.5, eps));
		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: x-(2*1e-16)");
		}

		//Testing sin(x)-(x/2)*(x/2)
		try{

			f = new Function(){ 
				public double f(double x){
					return Math.sin(x)-(x/2)*(x/2);
				}
				public String toString(){
					return "-----------------------------------------------\nOK: \"sin(x)-(x/2)*(x/2)\" \t: ";
				}
			};
			System.out.println(f.toString() + Secant.secant(f, 0, 5, eps));
		} catch(IllegalArgumentException e){

			System.out.println("-----------------------------------------------\nIllegalArgumentException: " 
					+ e.getMessage() + " Angiven funktion: sin(x)-(x/2)*(x/2)");
		}
	}
}
